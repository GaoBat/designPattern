package com.wayne.builder;

//builder模式定义:
//将一个复杂对象的构建与它的表示分离,使得同样的构建过程可以创建不同的表示
//builder模式是一步一步创建一个复杂的对象,它允许用户可以只通过指定复杂对象的类型和内容
//就可以构建它们,用户不知道内部的具体构建细节
//为何使用?
//是为了将构建复杂对象的过程和它的部件解耦,注意:是解耦过程和部件
//因为一个复杂的对象,不但有很多大量组成部分,如汽车,有很多部件:车轮 方向盘 发动机还有各种小零件等等
//部件很多,但远不止这些,如何将这些部件装配成一辆汽车,这个装配过程很复杂,builder模式就是为了将部件
//和组装过程分开
//如何使用?
//首先假设一个复杂对象是由多个部件组成的,builder模式是把复杂对象的创建和部件的创建分别开来,分别用
//builder类和director类表示
public interface Builder {
    //创建部件A 比如创建汽车车轮
    void buildPartA();
    //创建部件B 比如创建汽车方向盘
    void buildPartB();
    //创建部件C 比如创建汽车发动机
    void buildPartC();
    //返回最后组装成品结果(返回最后装配好的汽车)
    //成品的组装过程不在这里进行,而是转移到下面的director类中进行
    //从而实现了解耦过程和部件
    Product getResult();
}
